{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itay3\\\\Desktop\\\\Maof_React_Project\\\\src\\\\components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../GalleryStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Badge_color_status(status) {\n  let status_display;\n  switch (status) {\n    case \"Alive\":\n      status_display = \"badge bg-success fw-normal fs-5\";\n      break;\n    case \"Dead\":\n      status_display = \"badge bg-danger fw-normal fs-5\";\n      break;\n    case \"unknown\":\n      status_display = \"badge bg-secondary fw-normal fs-5\";\n      break;\n  }\n  return status_display;\n}\n_c = Badge_color_status;\nfunction Length_of_String(name) {\n  let name_suitble_size;\n  if (name.length < 20) {\n    name_suitble_size = \"fs-5 fw-bold m-1\";\n  } else {\n    name_suitble_size = \"fs-6 fw-bold m-1\";\n  }\n  return name_suitble_size;\n}\n_c2 = Length_of_String;\nfunction gender_color(gender) {\n  let gender_display;\n  switch (gender) {\n    case \"Male\":\n      gender_display = {\n        background: 'SteelBlue',\n        color: 'white'\n      };\n      break;\n    case \"Female\":\n      gender_display = {\n        background: 'HotPink',\n        color: ' white'\n      };\n      break;\n    default:\n      gender_display = {\n        background: 'Gray',\n        color: 'white'\n      };\n      break;\n  }\n  return gender_display;\n}\nfunction species_color(species) {\n  let species_display;\n  switch (species) {\n    case \"Human\":\n      species_display = {\n        background: 'MistyRose',\n        color: 'black'\n      };\n      break;\n    case \"Animal\":\n      species_display = {\n        background: 'OliveDrab',\n        color: 'white'\n      };\n      break;\n    case \"Alien\":\n      species_display = {\n        background: 'SpringGreen',\n        color: 'black'\n      };\n      break;\n    case \"Humanoid\":\n      species_display = {\n        background: 'RebeccaPurple',\n        color: 'white'\n      };\n      break;\n    case \"Robot\":\n      species_display = {\n        background: 'RoyalBlue',\n        color: 'white'\n      };\n      break;\n    case \"Mythological Creature\":\n      species_display = {\n        background: 'DarkGoldenRod',\n        color: 'white'\n      };\n      break;\n    default:\n      species_display = {\n        background: 'DimGrey',\n        color: 'white'\n      };\n      break;\n  }\n  return species_display;\n}\nfunction Cards({\n  results\n}) {\n  _s();\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const toggleModal = character => {\n    setSelectedCharacter(character);\n    setModalVisible(!modalVisible);\n  };\n  const closeModal = () => {\n    setSelectedCharacter(null);\n    setModalVisible(false);\n  };\n  const renderModal = () => {\n    if (selectedCharacter) {\n      // Extract character details\n      const {\n        name,\n        status,\n        species,\n        gender,\n        location,\n        image\n      } = selectedCharacter;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal ${modalVisible ? 'show' : ''}`,\n        onClick: closeModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"modal-title\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close\",\n                onClick: closeModal,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: image,\n                alt: name,\n                className: \"img-fluid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Species: \", species]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Gender: \", gender]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Last seen in: \", location.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  const renderCards = () => {\n    if (results) {\n      return results.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3 text-light position-relative\",\n        id: \"Character_Card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.image,\n            alt: character.name,\n            className: \"img-fluid\",\n            id: \"CardImage\",\n            onClick: () => toggleModal(character),\n            style: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, character.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this));\n    } else {\n      return \"404 - Not Found :(\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderModal(), renderCards()]\n  }, void 0, true);\n}\n_s(Cards, \"d7cLAz10IPrjox46BWTARiPqneQ=\");\n_c3 = Cards;\nexport default Cards;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Badge_color_status\");\n$RefreshReg$(_c2, \"Length_of_String\");\n$RefreshReg$(_c3, \"Cards\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Badge_color_status","status","status_display","_c","Length_of_String","name","name_suitble_size","length","_c2","gender_color","gender","gender_display","background","color","species_color","species","species_display","Cards","results","_s","modalVisible","setModalVisible","useState","selectedCharacter","setSelectedCharacter","toggleModal","character","closeModal","renderModal","location","image","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","src","alt","renderCards","map","id","style","cursor","_c3","$RefreshReg$"],"sources":["C:/Users/itay3/Desktop/Maof_React_Project/src/components/Cards.js"],"sourcesContent":["import React from 'react'\r\nimport '../GalleryStyle.css'\r\n\r\n\r\nfunction Badge_color_status(status){\r\n    let status_display;\r\n    switch (status){\r\n        case \"Alive\":\r\n            status_display = \"badge bg-success fw-normal fs-5\";\r\n            break;\r\n        case \"Dead\":\r\n            status_display = \"badge bg-danger fw-normal fs-5\";\r\n            break;\r\n        case \"unknown\":\r\n            status_display = \"badge bg-secondary fw-normal fs-5\";\r\n            break;\r\n    }\r\n    return status_display;\r\n}\r\n\r\nfunction Length_of_String(name){\r\n    let name_suitble_size;\r\n    if (name.length < 20){\r\n        name_suitble_size = \"fs-5 fw-bold m-1\";\r\n    }\r\n    else{\r\n        name_suitble_size = \"fs-6 fw-bold m-1\";\r\n    }\r\n    return name_suitble_size;\r\n}\r\n\r\nfunction gender_color(gender){\r\n    let gender_display;\r\n    switch (gender){\r\n        case \"Male\":\r\n            gender_display = {background: 'SteelBlue' , color: 'white'};\r\n            break;\r\n        case \"Female\":\r\n            gender_display = {background: 'HotPink' , color: ' white'};\r\n            break;\r\n        default:\r\n            gender_display = {background: 'Gray' , color: 'white'};\r\n            break;\r\n    }\r\n    return gender_display;\r\n}\r\n\r\nfunction species_color(species){\r\n    let species_display;\r\n    switch (species){\r\n        case \"Human\":\r\n            species_display = {background: 'MistyRose' , color: 'black'};\r\n            break;\r\n        case \"Animal\":\r\n            species_display = {background: 'OliveDrab' , color: 'white'};\r\n            break;\r\n        case \"Alien\":\r\n            species_display = {background: 'SpringGreen' , color: 'black'};\r\n            break;\r\n        case \"Humanoid\":\r\n            species_display = {background: 'RebeccaPurple' , color: 'white'};\r\n            break;\r\n        case \"Robot\":\r\n            species_display = {background: 'RoyalBlue' , color: 'white'};\r\n            break;\r\n        case \"Mythological Creature\":\r\n            species_display = {background: 'DarkGoldenRod' , color: 'white'};\r\n            break;\r\n        default:\r\n            species_display = {background: 'DimGrey' , color: 'white'};\r\n            break;\r\n    }\r\n    return species_display;\r\n}\r\n\r\nfunction Cards({ results }) {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [selectedCharacter, setSelectedCharacter] = useState(null);\r\n\r\n    const toggleModal = (character) => {\r\n        setSelectedCharacter(character);\r\n        setModalVisible(!modalVisible);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedCharacter(null);\r\n        setModalVisible(false);\r\n    };\r\n\r\n    const renderModal = () => {\r\n        if (selectedCharacter) {\r\n            // Extract character details\r\n            const { name, status, species, gender, location, image } = selectedCharacter;\r\n\r\n            return (\r\n                <div className={`modal ${modalVisible ? 'show' : ''}`} onClick={closeModal}>\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">{name}</h5>\r\n                                <button type=\"button\" className=\"close\" onClick={closeModal}>\r\n                                    <span>&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <img src={image} alt={name} className=\"img-fluid\" />\r\n                                <p>Status: {status}</p>\r\n                                <p>Species: {species}</p>\r\n                                <p>Gender: {gender}</p>\r\n                                <p>Last seen in: {location.name}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderCards = () => {\r\n        if (results) {\r\n            return results.map((character) => (\r\n                <div key={character.id} className=\"col-3 text-light position-relative\" id=\"Character_Card\">\r\n                    <div>\r\n                        <img\r\n                            src={character.image}\r\n                            alt={character.name}\r\n                            className=\"img-fluid\"\r\n                            id=\"CardImage\"\r\n                            onClick={() => toggleModal(character)}\r\n                            style={{ cursor: 'pointer' }}\r\n                        />\r\n                        {/* Rest of your card content */}\r\n                    </div>\r\n                </div>\r\n            ));\r\n        } else {\r\n            return \"404 - Not Found :(\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {renderModal()}\r\n            {renderCards()}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cards;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}